version: "3.8"
services:
  frontend:
    container_name: groceries-fe
    build:
      args:
        # ensure you have also updated ports (below)
        PORT: 5173
        PREVIEW_PORT: 8088
        VITE_BACKEND_URL: "https://dev.backend.ai/its-fake-lmao"
      context: ../fe/
      dockerfile: docker/Dockerfile.dev
    ports:
      - 5173:5173
      # beekeeper run on PORT 8080
      - 8088:8088
    entrypoint: sh -c "bash scripts/frontend-entrypoint.sh && tail -f /dev/null"
    cap_add:
      - SYS_ADMIN
    volumes:
      # overwrites node_modules installation with empty folder
      - ../fe:/opt/lib
      # overwrite node_modules directly from host with container
      # enables access to node_modules installation in container
      # creates an empty node_modules folder in host
      # - /usr/workspace/my-app/node_modules
    working_dir: /opt/lib
    # prevent container from exiting immediately
    stdin_open: true
    # entrypoint: ["yarn"]
    # command: npx babel --watch src --out-dir . --presets react-app/prod
  api:
    container_name: groceries-api
    build:
      context: ../be/
      args:
        PORT: 8000
        JUPYTERLAB_PORT: 8888
        DATABASE_URL: "postgres://postgres:postgres@db:5432/postgres"
      dockerfile: docker/Dockerfile.dev
    entrypoint: sh -c "bash scripts/groceries-api-entrypoint.sh && tail -f /dev/null"
    ports:
      - "8000:8000"
      - "8888:8888"
    volumes:
      - ../be:/opt/workspace
    working_dir: /opt/workspace
    stdin_open: true
    depends_on:
      - db
  db:
    container_name: groceries-db
    image: postgres:14.1-alpine
    build:
      context: ..
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      # Named volume persistence for database
      - db:/var/lib/postgresql/data
      # Initial Query to build database tables and mock data
      - ../db/create-tables-mock-data.sql:/docker-entrypoint-initdb.d/create-tables-mock-data.sql
networks:
  overlay:
volumes:
  db:
    driver: local
